# (optional if you don't use gzip elsewhere)
# gzip off;

# Keep this map if you have WebSockets on other routes
map $http_upgrade $connection_upgrade {
  default      keep-alive;
  'websocket'  upgrade;
}

server {
    listen 8082;
    server_name _;

    # Frontend (single-page app)
    location / {
        proxy_pass http://127.0.0.1:5176;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

  # SSE / API proxied to Actix backend
  # Adjust the path (/mock/stream or /mock/) to match your actual SSE route
  location ~ ^/mock(/.*)?$ {
    proxy_pass http://127.0.0.1:8084;
    proxy_http_version 1.1;

    # Use sane forwarded headers (do not set empty values)
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Proper upgrade/connection handling (uses the `map` above)
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    # Do not buffer â€” keep the stream open and forwarded directly
    proxy_buffering off;
    proxy_cache_bypass $http_upgrade;

    # Encourage clients/proxies not to cache SSE responses
    add_header Cache-Control no-cache;
    proxy_read_timeout 1h;
    proxy_send_timeout 1h;
    # If you need cross-origin, set appropriate CORS headers here
  }
}

server {
  listen 8080;
  server_name _;

  client_max_body_size 25M;

  # === SSE route: EXACT PATH ===
  # Use "=" to match the exact URL you gave.
  location = /v1/uwbDataStream {
    proxy_pass http://127.0.0.1:3001;   # keep NO trailing slash so URI is preserved
    proxy_http_version 1.1;

    # Standard forward headers
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

  # SSE MUST NOT be upgraded (that's only for WS)
  # Use the map to set Connection correctly; Upgrade uses client header
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection $connection_upgrade;

    # Critical for SSE
    proxy_buffering off;
    proxy_cache off;
    chunked_transfer_encoding off;
    add_header X-Accel-Buffering no;

    # Let it stay open
    proxy_read_timeout 1h;
    proxy_send_timeout 1h;
  }

  # Everything else (REST/WS/etc.)
  location / {
    proxy_pass http://127.0.0.1:3001;
    proxy_http_version 1.1;

    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Keep WS support here
    proxy_set_header Upgrade    $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    proxy_read_timeout 120s;
    proxy_send_timeout 120s;
  }
}